#!/bin/bash

source "/data/SetupHelper/HelperResources/IncludeHelpers"

configFile="/u-boot/config.txt"
modulesFile="/etc/modules"
pythonLibs="$scriptDir/ext"

packageLogFile="/var/log/dbus-i2c/current"

createFileIfNotExists ()
{
	if [ ! -f "$1" ]; then
		touch "$1"
		if [ ! -z "$2" ]; then
			chmod "$2" "$1"
		fi
	fi
}

createDeviceFile ()
{
	echo "{\"module\": \"$2\", \"class\": \"$3\", \"bus\": $4, \"address\": $5, \"updateInterval\": $6}" > "$1"
}

createDeviceFileINA219 ()
{
	echo "{\"module\": \"$2\", \"class\": \"$3\", \"bus\": $4, \"address\": $5, \"updateInterval\": $6, \"shuntResistance\": 0.1, \"maxExpectedCurrent\": 2}" > "$1"
}

createDeviceFileINA226 ()
{
	echo "{\"module\": \"$2\", \"class\": \"$3\", \"bus\": $4, \"address\": $5, \"updateInterval\": $6, \"shuntResistance\": $7, \"maxExpectedCurrent\": $8}" > "$1"
}

insertLines ()
{
	if [ $(grep -c "$2" "$1") == 0 ]; then
		echo "#### Begin: dbus-i2c" >> "$1"
		echo "$2" >> "$1"
		echo "#### End: dbus-i2c" >> "$1"
		rebootNeeded="$3"
	fi
}

removeLines ()
{
	if [ -f "$1" ]; then
		if [ $(grep -c "#### Begin: dbus-i2c" "$1") != 0 ]; then
			sed -i -e '/#### Begin: dbus-i2c/,/#### End: dbus-i2c/d' "$1"
			rebootNeeded="$2"
		fi
	fi
}

extInstall ()
{
	url=$1
	project=$2
	branch=$3
	repoPath=$4
	if [ -z "$branch" ]; then
		branch="master"
	fi
	if [ -z "$repoPath" ]; then
		repoPath="$project"
	fi
	logMessage "++ Install Python library $project ($branch) from $url into $pythonLibs"
	wget "$url/archive/refs/heads/$branch.zip" -O "/tmp/$project.zip"
	mkdir -p "/tmp/$project"
	unzip -oq "/tmp/$project.zip" -d "/tmp/$project"
	if [ "$repoPath" == "/" ]; then
		# don't quote - need shell expansion!
		cp -R /tmp/$project/$project-$branch/* "$pythonLibs"
	else
		rm -fr "$pythonLibs/$project"
		mv "/tmp/$project/$project-$branch/$repoPath" "$pythonLibs/$repoPath"
	fi
	rm -fr "/tmp/$project" "/tmp/$project.zip"
}

extUninstall ()
{
	logMessage "++ Removing Python libray $1"
	rm -fr "$pythonLibs/$1"
}

prompt ()
{
	/bin/echo -n "$*"
	read response
}


#### running manually and OK to proceed - prompt for input
if [ $scriptAction == 'NONE' ] ; then
	# display initial message
	echo
	echo "DBus support for I2C devices"
	
	standardActionPrompt
	if [ $scriptAction == 'INSTALL' ]; then

		yesNoPrompt "Reconfigure? [y/n] "
		if [ "$yesResponse" == 'true' ]; then

			rm -f $setupOptionsDir/device-bme280-*
			i=1
			while true; do
				prompt "BME280 (number $i): Enter I2C address or press enter to finish (e.g. 0x76/0x77): "
				if [ -z "$response" ]; then
					break
				fi
				createDeviceFile "$setupOptionsDir/device-bme280-$i" "bme280_service" "BME280Service" 1 $(($response)) 60000
				i=$((i+1))
			done

                        
                        rm -f $setupOptionsDir/device-dps310-*
                        i=1
                        while true; do
                                prompt "DPS310 (number $i): Enter I2C address or press enter to finish (e.g. 0x76/0x77): "
                                if [ -z "$response" ]; then
                                        break
                                fi
                                createDeviceFile "$setupOptionsDir/device-dps310-$i" "dps310_service" "DPS310Service" 1 $(($response)) 60000
                                i=$((i+1))
                        done


			rm -f $setupOptionsDir/device-sht3x-*
			i=1
			while true; do
				prompt "SHT3x (number $i): Enter I2C address or press enter to finish (e.g. 0x44/0x45): "
				if [ -z "$response" ]; then
					break
				fi
				createDeviceFile "$setupOptionsDir/device-sht3x-$i" "sht_service" "SHT3xService" 1 $(($response)) 60000
				i=$((i+1))
			done

			rm -f $setupOptionsDir/device-ina219-*
			i=1
			while true; do
				prompt "INA219 (number $i): Enter I2C address or press enter to finish (e.g. 0x40/0x41/0x42/0x44/0x45): "
				if [ -z "$response" ]; then
					break
				fi
				createDeviceFileINA219 "$setupOptionsDir/device-ina219-$i" "ina219_service" "INA219DCLoadService" 1 $(($response)) 1000
				i=$((i+1))
			done

			rm -f $setupOptionsDir/device-ina226-*
			i=1
			while true; do
				prompt "INA226 (number $i): Enter I2C address or press enter to finish (e.g. 0x40/0x41/0x42/0x44/0x45): "
				if [ -z "$response" ]; then
					break
				fi
				createDeviceFileINA226 "$setupOptionsDir/device-ina226-$i" "ina226_service" "INA226DCLoadService" 1 $(($response)) 1000 0.1 0.8
				i=$((i+1))
			done

		fi
	fi
fi


#### install code goes here
if [ $scriptAction == 'INSTALL' ] ; then

	logMessage "++ Installing DBUS I2C services"

	insertLines "$configFile" "dtparam=i2c_arm=on" true
	createFileIfNotExists "$modulesFile"
	insertLines "$modulesFile" "i2c-dev" true
	mkdir -p "$pythonLibs"
	extInstall "https://github.com/pulquero/velib_python" "velib_python" "master" "/"

	if [ -f "$setupOptionsDir/device-bme280-1" ]; then
		extInstall "https://github.com/kplindegaard/smbus2" "smbus2"
		extInstall "https://github.com/pulquero/bme280" "bme280"
	fi

        if [ -f "$setupOptionsDir/device-dps310-1" ]; then
		extInstall "https://github.com/kplindegaard/smbus2" "smbus2"
		extInstall "https://github.com/Infineon/RaspberryPi_DPS" "RaspberryPi_DPS" "master" "/"	
                sed -e "s/import smbus/import smbus2/" -e "s/smbus\./smbus2./" < ext/DPS.py > /tmp/DPS.py
                mv /tmp/DPS.py ext/

	fi

	if [ -f "$setupOptionsDir/device-ina219-1" ]; then
		extInstall "https://github.com/adafruit/Adafruit_Python_GPIO" "Adafruit_Python_GPIO" "master" "Adafruit_GPIO"
		extInstall "https://github.com/adafruit/Adafruit_Python_PureIO" "Adafruit_Python_PureIO" "main" "Adafruit_PureIO"
		extInstall "https://github.com/chrisb2/pi_ina219" "pi_ina219" "master" "/"
	fi

	if [ -f "$setupOptionsDir/device-ina226-1" ]; then
		extInstall "https://github.com/kplindegaard/smbus2" "smbus2" "master" "smbus2"
		extInstall "https://github.com/e71828/pi_ina226" "pi_ina226" "main" "/"
	fi

	if [ -f "$setupOptionsDir/device-sht3x-1" ]; then
		extInstall "https://github.com/Sensirion/python-i2c-driver" "python-i2c-driver" "master" "sensirion_i2c_driver"
		extInstall "https://github.com/Sensirion/python-driver-adapters" "python-driver-adapters" "master" "sensirion_driver_adapters"
		extInstall "https://github.com/Sensirion/python-driver-support-types" "python-driver-support-types" "master" "sensirion_driver_support_types"
		extInstall "https://github.com/Sensirion/python-i2c-sht3x" "python-i2c-sht3x" "master" "sensirion_i2c_sht3x"
	fi

	installService $packageName
fi


#### uninstalling - check scriptAction again
# if an install step failed package needs to be removed
if [ $scriptAction == 'UNINSTALL' ] ; then
	logMessage "++ Uninstalling DBUS I2C services"

	removeService $packageName
	extUninstall "bme280"
	extUninstall "smbus2"
	extUninstall "sensirion_i2c_driver"
	extUninstall "sensirion_i2c_sht"
	removeLines "$configFile" true
	removeLines "$modulesFile" true
fi


endScript
